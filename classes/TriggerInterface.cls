/**
 * Interface containing methods Trigger Handlers must implement to enforce best practice
 * and bulkification of triggers.
 */
public interface TriggerInterface
{
    /************************************************************************************************************************************
    init method is called once on before trigger call so as to cache any data to be used across trigger before transaction
    *************************************************************************************************************************************/
    void beforeInit();

    /************************************************************************************************************************************
    init method is called once on before trigger call so as to cache any data to be used across trigger after transaction
    *************************************************************************************************************************************/
    void afterInit();

    /************************************************************************************************************************************
    Trigger before insert event
    *************************************************************************************************************************************/
    void executeBeforeInsert();

    /************************************************************************************************************************************
    Trigger after insert event
    *************************************************************************************************************************************/
    void executeAfterInsert();

    /************************************************************************************************************************************
    Trigger before update event
    *************************************************************************************************************************************/
    void executeBeforeUpdate();

    /************************************************************************************************************************************
    Trigger after update event
    *************************************************************************************************************************************/
    void executeAfterUpdate();

    /************************************************************************************************************************************
    Trigger before delete event
    *************************************************************************************************************************************/
    void executeBeforeDelete();

    /************************************************************************************************************************************
    Trigger after delete event
    *************************************************************************************************************************************/
    void executeAfterDelete();

    /************************************************************************************************************************************
    Trigger un delete event
    *************************************************************************************************************************************/
    void executeUnDelete();
}